<?xml version="1.0" encoding="UTF-8"?>
<project name="jitsi-videobridge" xmlns:maven-artifact="antlib:org.apache.maven.artifact.ant">
    <!--
    Requires maven-ant-tasks to maintain this project's dependencies in Maven's
    pom.xml only and have the latter fetch them when necessary so that we don't
    have to commit dependent binaries in this project's repository.

    To install maven-ant-tasks locally, run the following once:
    mvn dependency:get -DartifactId=maven-ant-tasks -DgroupId=org.apache.maven -Dversion=2.1.3

    Then invoke Ant with the -lib command line argument pointing to the
    directory which contains maven-ant-tasks as follows:
    ant -lib ~/.m2/repository/org/apache/maven/maven-ant-tasks/2.1.3 [target]
    -->

    <property file="local.properties" />
    <property name="src" value="src/main/java" />
    <property name="src.test" value="src/test/java" />
    <property name="output" value="classes" />
    <property name="output.test" value="test-classes" />
    <property name="run.arg.line" value="" />
    <property name="run.jvmarg.line" value="" />
    <property name="dist" value="dist" />
    <property name="doc" value="doc"/>
    <property name="java.doc" value="${doc}/api"/>
    <property name="jitsi.path" value="../jitsi"/>
    <property name="junit.reports" value="junit-reports"/>

    <condition property="label" value="build.SVN">
        <not>
            <isset property="label"/>
        </not>
    </condition>

    <property
        name="packname.win"
        value="${ant.project.name}-windows-x86-${label}"/>
    <property
        name="packname.win64"
        value="${ant.project.name}-windows-x64-${label}"/>
    <property
        name="packname.lin"
        value="${ant.project.name}-linux-x86-${label}"/>
    <property
        name="packname.lin64"
        value="${ant.project.name}-linux-x64-${label}"/>
    <property
        name="packname.macosx"
        value="${ant.project.name}-macosx-${label}"/>
    <property name="packname.src" value="${ant.project.name}-src-${label}"/>

    <maven-artifact:dependencies pathId="compile.classpath" useScope="compile">
      <pom file="pom.xml" />
    </maven-artifact:dependencies>
    <maven-artifact:dependencies filesetId="runtime.fileset" pathId="runtime.classpath" useScope="runtime">
      <pom file="pom.xml" />
    </maven-artifact:dependencies>
    <path id="run.classpath">
        <path refid="runtime.classpath" />
        <pathelement location="${output}" />
    </path>
    <maven-artifact:dependencies pathId="test.classpath" useScope="test">
      <pom file="pom.xml" />
    </maven-artifact:dependencies>
    <path id="run.test.classpath">
        <path refid="test.classpath" />
        <pathelement location="${output.test}" />
    </path>

    <!-- Import debian build xml -->
    <import file="resources/install/build-debian.xml"/>

    <target name="clean">
        <delete failonerror="false" includeemptydirs="true">
            <fileset dir="${output}" />
            <fileset dir="${output.test}" />
            <fileset dir="${dist}" />
            <fileset dir="${junit.reports}" />
            <fileset dir="release" />
            <fileset file="jitsi-videobridge.jar" />
        </delete>
    </target>

    <target name="copy-jitsi-bundles" if="jitsi.path">
        <copy todir="lib" verbose="true" overwrite="true">
            <fileset dir="./${jitsi.path}/sc-bundles">
                <include name="*.jar"/>
                <not>
                    <present present="srconly" targetdir="lib"/>
                </not>
            </fileset>
        </copy>
    </target>

    <target name="compile" depends="version">
        <mkdir dir="${output}" />
        <javac
            classpathref="compile.classpath"
            destdir="${output}"
            debug="true"
            fork="true"
            source="1.7"
            srcdir="${src}"
            target="1.7" />
    </target>

    <target name="compile-test" depends="compile">
        <mkdir dir="${output.test}" />
        <javac
                classpathref="test.classpath"
                destdir="${output.test}"
                debug="true"
                fork="true"
                source="1.7"
                srcdir="${src.test}"
                target="1.7" />
    </target>

    <target name="run">
        <condition property="run.lib.native" value="windows-64">
            <os arch="amd64" family="windows" />
        </condition>
        <condition property="run.lib.native" value="windows">
            <os arch="i386" family="windows" />
        </condition>
        <condition property="run.lib.native" value="macosx">
            <os family="mac" />
        </condition>
        <condition property="run.lib.native" value="linux-64">
            <and>
                <equals
                        arg1="${os.name}"
                        arg2="linux"
                        casesensitive="false"
                        trim="true"/>
                <os arch="amd64" />
            </and>
        </condition>
        <condition property="run.lib.native" value="linux">
            <and>
                <equals
                        arg1="${os.name}"
                        arg2="linux"
                        casesensitive="false"
                        trim="true"/>
                <os arch="i386" />
            </and>
        </condition>
        <condition
                else=""
                property="run.java.library.path"
                value="-Djava.library.path=${basedir}/lib/native/${run.lib.native}">
            <isset property="run.lib.native"/>
        </condition>
        <java
                classname="org.jitsi.videobridge.Main"
                classpathref="run.classpath"
                failonerror="true"
                fork="true" >
            <jvmarg line="${run.java.library.path} ${run.jvmarg.line}" />
            <jvmarg value="-Djava.util.logging.config.file=${basedir}/lib/logging.properties"/>
            <arg line="${run.arg.line}" />
        </java>
    </target>

    <target name="test" depends="compile-test">
        <mkdir dir="${junit.reports}"/>
        <junit printsummary="yes" haltonfailure="true" fork="true" forkmode="once">
            <formatter type="xml" />
            <classpath refid="run.test.classpath"/>
            <sysproperty
                    key="java.library.path"
                    path="lib/native/linux-64:lib/native/linux:lib/native/mac:lib/native/windows-64:lib/native/windows" />
            <test name="org.jitsi.videobridge.VideoBridgeTestSuite"
                  todir="${junit.reports}"/>
        </junit>
    </target>

    <target name="jar" depends="compile">
        <jar
            compress="true"
            destfile="jitsi-videobridge.jar">
        <fileset casesensitive="no" dir="${output}">
            <include name="**/*.class" />
            <include name="**/*.properties" />
            <exclude name="${output}/jitsi-videobridge.jar" />
        </fileset>
        </jar>
    </target>

    <target
        name="make"
        depends="compile,jar"
        description="Incrementally compile and jar/package the project." />

    <target
        name="rebuild"
        depends="clean,make"
        description="Clean and make the project." />

    <!-- Jitsi Videobridge Version -->
    <target name="version">
        <!-- set the build id according to the cruisecontrol property -->
        <replaceregexp file="${src}/org/jitsi/videobridge/version/CurrentVersionImpl.java"
                 match="NIGHTLY_BUILD_ID = (.+)"
                 replace="NIGHTLY_BUILD_ID = &quot;${label}&quot;;"
                 byline="true"/>
    </target>

    <!-- JAVADOC -->
    <target name="javadoc"
        description="Generates project javadoc.">
        <javadoc author="true" destdir="${java.doc}" package="true"
            version="true" use="true" windowtitle="Jitsi API"
            classpathref="compile.classpath" source="1.5+" maxmemory="256m">
            <packageset dir="${src}">
                <include name="**"/>
            </packageset>
            <tag name="todo" description="To do:"/>
            <tag name="note" description="Note:"/>
            <link href="${j2se_api}" />
            <header>
                <![CDATA[
                <b> Jitsi Videobridge: OpenSource video conferencing. </b>
                ]]>
            </header>
            <bottom>
                <![CDATA[
                <font size="-1">
                    <a href="http://jitsi.org"> Jitsi Videobridge, OpenSource video conferencing. </a>
                    <br>
                        <a href="http://www.apache.org/licenses/LICENSE-2.0"> Distributable under Apache 2.0 license. </a>
                    <br>
                </font>
                ]]>
            </bottom>
        </javadoc>
    </target>

    <target name="dist.win" depends="copy-runtime-dependencies-from-maven,make">
        <zip destfile="${dist}/windows/${packname.win}.zip">
            <zipfileset file="jitsi-videobridge.jar"
                        prefix="${packname.win}" />
            <zipfileset dir="lib" prefix="${packname.win}/lib">
                <exclude name="native/windows-64/**"/>
                <exclude name="native/linux/**"/>
                <exclude name="native/linux-64/**"/>
                <exclude name="native/macosx/**"/>
            </zipfileset>
            <zipfileset file="resources/install/windows/jvb.bat"
                        prefix="${packname.win}" />
        </zip>
    </target>

    <target name="dist.win64" depends="copy-runtime-dependencies-from-maven,make">
        <zip destfile="${dist}/windows/${packname.win64}.zip">
            <zipfileset file="jitsi-videobridge.jar"
                        prefix="${packname.win64}" />
            <zipfileset dir="lib" prefix="${packname.win64}/lib">
                <exclude name="native/windows/**"/>
                <exclude name="native/linux/**"/>
                <exclude name="native/linux-64/**"/>
                <exclude name="native/macosx/**"/>
            </zipfileset>
            <zipfileset file="resources/install/windows-64/jvb.bat"
                        prefix="${packname.win64}" />
        </zip>
    </target>

    <target name="dist.lin" depends="copy-runtime-dependencies-from-maven,make">
        <zip destfile="${dist}/linux/${packname.lin}.zip">
            <zipfileset file="jitsi-videobridge.jar"
                        prefix="${packname.lin}" />
            <zipfileset dir="lib" prefix="${packname.lin}/lib">
                <exclude name="native/windows-64/**"/>
                <exclude name="native/linux-64/**"/>
                <exclude name="native/windows/**"/>
                <exclude name="native/macosx/**"/>
            </zipfileset>
            <zipfileset file="resources/install/linux/jvb.sh"
                        prefix="${packname.lin}" filemode="755"/>
        </zip>
    </target>

    <target name="dist.lin64" depends="copy-runtime-dependencies-from-maven,make">
        <zip destfile="${dist}/linux/${packname.lin64}.zip">
            <zipfileset file="jitsi-videobridge.jar"
                        prefix="${packname.lin64}" />
            <zipfileset dir="lib" prefix="${packname.lin64}/lib">
                <exclude name="native/windows-64/**"/>
                <exclude name="native/linux/**"/>
                <exclude name="native/windows/**"/>
                <exclude name="native/macosx/**"/>
            </zipfileset>
            <zipfileset file="resources/install/linux-64/jvb.sh"
                        prefix="${packname.lin64}" filemode="755"/>
        </zip>
    </target>

    <target name="dist.macosx" depends="copy-runtime-dependencies-from-maven,make">
        <mkdir dir="${dist}/macosx" />
        <zip destfile="${dist}/macosx/${packname.macosx}.zip">
            <zipfileset file="jitsi-videobridge.jar"
                        prefix="${packname.macosx}" />
            <zipfileset dir="lib" prefix="${packname.macosx}/lib">
                <exclude name="native/windows-64/**"/>
                <exclude name="native/linux/**"/>
                <exclude name="native/linux-64/**"/>
                <exclude name="native/windows/**"/>
            </zipfileset>
            <zipfileset file="resources/install/macosx/jvb.sh"
                        prefix="${packname.macosx}" filemode="755"/>
        </zip>
    </target>

    <target name="dist.src" depends="make">
        <zip destfile="${dist}/src/${packname.src}.zip">
            <zipfileset dir="." prefix="${packname.src}">
                <exclude name="classes/"/>
                <exclude name="dist/"/>
                <exclude name=".git/"/>
                <exclude name="jitsi-videobridge.jar"/>
            </zipfileset>
        </zip>
    </target>

    <!-- build all binaries and the jitsi-videobridge.jar
        for all supported platforms -->
    <target name="dist"
            depends="dist.win,dist.win64,dist.lin,dist.lin64,dist.macosx,dist.src" />

    <!--
        The easiest way to build the plugin is:
        1. execute in jitsi-videobridge $ ant clean dist.openfire
        2. add a soft link in openfire source plugins
            folder (openfire_src_X.X.X/src/plugins)
            jitsiVideobridge -> jitsi-videobridge/dist/openfire/jitsiVideobridge
        3. in openfire build folder (openfire_src_X.X.X/build) execute:
            $ ant plugin -Dplugin=jitsiVideobridge
    -->
    <target name="dist.openfire" depends="copy-runtime-dependencies-from-maven,jar">
        <copy todir="${dist}/openfire/jitsiVideobridge">
            <fileset dir="openfire"/>
        </copy>
        <copy file="jitsi-videobridge.jar"
              todir="${dist}/openfire/jitsiVideobridge/lib"/>
        <copy todir="${dist}/openfire/jitsiVideobridge/lib">
            <fileset dir="lib">
                <exclude name="native/**"/>
                <exclude name="bouncycastle.jar"/>
                <exclude name="jetty-*.jar"/>
            </fileset>
        </copy>
        <jar compress="true"
             destfile="${dist}/openfire/jitsiVideobridge/lib/jitsi-videobridge-native-linux-64.jar">
            <fileset casesensitive="no" dir="lib/native/linux-64/">
                <include name="*" />
            </fileset>
        </jar>
        <jar compress="true"
             destfile="${dist}/openfire/jitsiVideobridge/lib/jitsi-videobridge-native-linux-32.jar">
            <fileset casesensitive="no" dir="lib/native/linux/">
                <include name="*" />
            </fileset>
        </jar>
        <jar compress="true"
             destfile="${dist}/openfire/jitsiVideobridge/lib/jitsi-videobridge-native-windows-64.jar">
            <fileset casesensitive="no" dir="lib/native/windows-64/">
                <include name="*" />
            </fileset>
        </jar>
        <jar compress="true"
             destfile="${dist}/openfire/jitsiVideobridge/lib/jitsi-videobridge-native-windows-32.jar">
            <fileset casesensitive="no" dir="lib/native/windows/">
                <include name="*" />
            </fileset>
        </jar>
        <jar compress="true"
             destfile="${dist}/openfire/jitsiVideobridge/lib/jitsi-videobridge-native-macosx.jar">
            <fileset casesensitive="no" dir="lib/native/macosx/">
                <include name="*" />
            </fileset>
        </jar>
    </target>

    <target name="copy-runtime-dependencies-from-maven">
        <delete failonerror="false" includeemptydirs="true">
            <fileset file="lib/*.jar" />
        </delete>
        <copy todir="lib">
            <fileset refid="runtime.fileset" />
            <mapper type="flatten" />
        </copy>
    </target>

</project>

